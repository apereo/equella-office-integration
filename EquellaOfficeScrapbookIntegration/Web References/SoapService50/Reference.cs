//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.237.
// 
#pragma warning disable 1591

namespace Equella.SoapService50 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapService50ServiceSoapBinding", Namespace="http://soap.remoting.web.tle.com")]
    public partial class SoapService50Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getContributableCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback cloneItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback facetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback userExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback rejectTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSharedOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback userNameExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemFilenamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchItemsFastOperationCompleted;
        
        private System.Threading.SendOrPostCallback archiveItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskFilterNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserFromAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupUuidForNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback editUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback itemExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSharedOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginWithTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback newItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback isUserInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback acceptTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback newVersionItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback keepAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSearchableCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback unzipFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAllUsersFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskFilterCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelItemEditOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapService50Service() {
            this.Url = global::Equella.Properties.Settings.Default.Equella_SoapService50_SoapService50;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getContributableCollectionsCompletedEventHandler getContributableCollectionsCompleted;
        
        /// <remarks/>
        public event getCollectionCompletedEventHandler getCollectionCompleted;
        
        /// <remarks/>
        public event getCommentCompletedEventHandler getCommentCompleted;
        
        /// <remarks/>
        public event deleteGroupCompletedEventHandler deleteGroupCompleted;
        
        /// <remarks/>
        public event getSchemaCompletedEventHandler getSchemaCompleted;
        
        /// <remarks/>
        public event deleteCommentCompletedEventHandler deleteCommentCompleted;
        
        /// <remarks/>
        public event addGroupCompletedEventHandler addGroupCompleted;
        
        /// <remarks/>
        public event searchItemsCompletedEventHandler searchItemsCompleted;
        
        /// <remarks/>
        public event cloneItemCompletedEventHandler cloneItemCompleted;
        
        /// <remarks/>
        public event unlockCompletedEventHandler unlockCompleted;
        
        /// <remarks/>
        public event deleteItemCompletedEventHandler deleteItemCompleted;
        
        /// <remarks/>
        public event facetCountCompletedEventHandler facetCountCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event userExistsCompletedEventHandler userExistsCompleted;
        
        /// <remarks/>
        public event rejectTaskCompletedEventHandler rejectTaskCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event addSharedOwnerCompletedEventHandler addSharedOwnerCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event userNameExistsCompletedEventHandler userNameExistsCompleted;
        
        /// <remarks/>
        public event editItemCompletedEventHandler editItemCompleted;
        
        /// <remarks/>
        public event getItemFilenamesCompletedEventHandler getItemFilenamesCompleted;
        
        /// <remarks/>
        public event getCommentsCompletedEventHandler getCommentsCompleted;
        
        /// <remarks/>
        public event searchItemsFastCompletedEventHandler searchItemsFastCompleted;
        
        /// <remarks/>
        public event archiveItemCompletedEventHandler archiveItemCompleted;
        
        /// <remarks/>
        public event getTaskFilterNamesCompletedEventHandler getTaskFilterNamesCompleted;
        
        /// <remarks/>
        public event addUserToGroupCompletedEventHandler addUserToGroupCompleted;
        
        /// <remarks/>
        public event uploadFileCompletedEventHandler uploadFileCompleted;
        
        /// <remarks/>
        public event removeUserFromAllGroupsCompletedEventHandler removeUserFromAllGroupsCompleted;
        
        /// <remarks/>
        public event saveItemCompletedEventHandler saveItemCompleted;
        
        /// <remarks/>
        public event queryCountCompletedEventHandler queryCountCompleted;
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event getGroupUuidForNameCompletedEventHandler getGroupUuidForNameCompleted;
        
        /// <remarks/>
        public event editUserCompletedEventHandler editUserCompleted;
        
        /// <remarks/>
        public event deleteFileCompletedEventHandler deleteFileCompleted;
        
        /// <remarks/>
        public event itemExistsCompletedEventHandler itemExistsCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event removeSharedOwnerCompletedEventHandler removeSharedOwnerCompleted;
        
        /// <remarks/>
        public event loginWithTokenCompletedEventHandler loginWithTokenCompleted;
        
        /// <remarks/>
        public event newItemCompletedEventHandler newItemCompleted;
        
        /// <remarks/>
        public event isUserInGroupCompletedEventHandler isUserInGroupCompleted;
        
        /// <remarks/>
        public event getItemCompletedEventHandler getItemCompleted;
        
        /// <remarks/>
        public event addCommentCompletedEventHandler addCommentCompleted;
        
        /// <remarks/>
        public event acceptTaskCompletedEventHandler acceptTaskCompleted;
        
        /// <remarks/>
        public event queryCountsCompletedEventHandler queryCountsCompleted;
        
        /// <remarks/>
        public event newVersionItemCompletedEventHandler newVersionItemCompleted;
        
        /// <remarks/>
        public event keepAliveCompletedEventHandler keepAliveCompleted;
        
        /// <remarks/>
        public event getTaskListCompletedEventHandler getTaskListCompleted;
        
        /// <remarks/>
        public event groupExistsCompletedEventHandler groupExistsCompleted;
        
        /// <remarks/>
        public event getSearchableCollectionsCompletedEventHandler getSearchableCollectionsCompleted;
        
        /// <remarks/>
        public event setOwnerCompletedEventHandler setOwnerCompleted;
        
        /// <remarks/>
        public event removeUserFromGroupCompletedEventHandler removeUserFromGroupCompleted;
        
        /// <remarks/>
        public event unzipFileCompletedEventHandler unzipFileCompleted;
        
        /// <remarks/>
        public event removeAllUsersFromGroupCompletedEventHandler removeAllUsersFromGroupCompleted;
        
        /// <remarks/>
        public event getTaskFilterCountsCompletedEventHandler getTaskFilterCountsCompleted;
        
        /// <remarks/>
        public event cancelItemEditCompletedEventHandler cancelItemEditCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getContributableCollections() {
            object[] results = this.Invoke("getContributableCollections", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getContributableCollectionsAsync() {
            this.getContributableCollectionsAsync(null);
        }
        
        /// <remarks/>
        public void getContributableCollectionsAsync(object userState) {
            if ((this.getContributableCollectionsOperationCompleted == null)) {
                this.getContributableCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContributableCollectionsOperationCompleted);
            }
            this.InvokeAsync("getContributableCollections", new object[0], this.getContributableCollectionsOperationCompleted, userState);
        }
        
        private void OngetContributableCollectionsOperationCompleted(object arg) {
            if ((this.getContributableCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContributableCollectionsCompleted(this, new getContributableCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getCollection([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("getCollection", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCollectionAsync(string in0) {
            this.getCollectionAsync(in0, null);
        }
        
        /// <remarks/>
        public void getCollectionAsync(string in0, object userState) {
            if ((this.getCollectionOperationCompleted == null)) {
                this.getCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCollectionOperationCompleted);
            }
            this.InvokeAsync("getCollection", new object[] {
                        in0}, this.getCollectionOperationCompleted, userState);
        }
        
        private void OngetCollectionOperationCompleted(object arg) {
            if ((this.getCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCollectionCompleted(this, new getCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getComment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            object[] results = this.Invoke("getComment", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentAsync(string in0, int in1, string in2) {
            this.getCommentAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getCommentAsync(string in0, int in1, string in2, object userState) {
            if ((this.getCommentOperationCompleted == null)) {
                this.getCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentOperationCompleted);
            }
            this.InvokeAsync("getComment", new object[] {
                        in0,
                        in1,
                        in2}, this.getCommentOperationCompleted, userState);
        }
        
        private void OngetCommentOperationCompleted(object arg) {
            if ((this.getCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentCompleted(this, new getCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            this.Invoke("deleteGroup", new object[] {
                        in0});
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string in0) {
            this.deleteGroupAsync(in0, null);
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string in0, object userState) {
            if ((this.deleteGroupOperationCompleted == null)) {
                this.deleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGroupOperationCompleted);
            }
            this.InvokeAsync("deleteGroup", new object[] {
                        in0}, this.deleteGroupOperationCompleted, userState);
        }
        
        private void OndeleteGroupOperationCompleted(object arg) {
            if ((this.deleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getSchema([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("getSchema", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSchemaAsync(string in0) {
            this.getSchemaAsync(in0, null);
        }
        
        /// <remarks/>
        public void getSchemaAsync(string in0, object userState) {
            if ((this.getSchemaOperationCompleted == null)) {
                this.getSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSchemaOperationCompleted);
            }
            this.InvokeAsync("getSchema", new object[] {
                        in0}, this.getSchemaOperationCompleted, userState);
        }
        
        private void OngetSchemaOperationCompleted(object arg) {
            if ((this.getSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSchemaCompleted(this, new getSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteComment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            this.Invoke("deleteComment", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public void deleteCommentAsync(string in0, int in1, string in2) {
            this.deleteCommentAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void deleteCommentAsync(string in0, int in1, string in2, object userState) {
            if ((this.deleteCommentOperationCompleted == null)) {
                this.deleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCommentOperationCompleted);
            }
            this.InvokeAsync("deleteComment", new object[] {
                        in0,
                        in1,
                        in2}, this.deleteCommentOperationCompleted, userState);
        }
        
        private void OndeleteCommentOperationCompleted(object arg) {
            if ((this.deleteCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            this.Invoke("addGroup", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void addGroupAsync(string in0, string in1) {
            this.addGroupAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void addGroupAsync(string in0, string in1, object userState) {
            if ((this.addGroupOperationCompleted == null)) {
                this.addGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupOperationCompleted);
            }
            this.InvokeAsync("addGroup", new object[] {
                        in0,
                        in1}, this.addGroupOperationCompleted, userState);
        }
        
        private void OnaddGroupOperationCompleted(object arg) {
            if ((this.addGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string searchItems([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, bool in3, int in4, bool in5, int in6, int in7) {
            object[] results = this.Invoke("searchItems", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchItemsAsync(string in0, string[] in1, string in2, bool in3, int in4, bool in5, int in6, int in7) {
            this.searchItemsAsync(in0, in1, in2, in3, in4, in5, in6, in7, null);
        }
        
        /// <remarks/>
        public void searchItemsAsync(string in0, string[] in1, string in2, bool in3, int in4, bool in5, int in6, int in7, object userState) {
            if ((this.searchItemsOperationCompleted == null)) {
                this.searchItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchItemsOperationCompleted);
            }
            this.InvokeAsync("searchItems", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7}, this.searchItemsOperationCompleted, userState);
        }
        
        private void OnsearchItemsOperationCompleted(object arg) {
            if ((this.searchItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchItemsCompleted(this, new searchItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string cloneItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, bool in2) {
            object[] results = this.Invoke("cloneItem", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cloneItemAsync(string in0, int in1, bool in2) {
            this.cloneItemAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void cloneItemAsync(string in0, int in1, bool in2, object userState) {
            if ((this.cloneItemOperationCompleted == null)) {
                this.cloneItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloneItemOperationCompleted);
            }
            this.InvokeAsync("cloneItem", new object[] {
                        in0,
                        in1,
                        in2}, this.cloneItemOperationCompleted, userState);
        }
        
        private void OncloneItemOperationCompleted(object arg) {
            if ((this.cloneItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cloneItemCompleted(this, new cloneItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unlock([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1) {
            this.Invoke("unlock", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void unlockAsync(string in0, int in1) {
            this.unlockAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void unlockAsync(string in0, int in1, object userState) {
            if ((this.unlockOperationCompleted == null)) {
                this.unlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlockOperationCompleted);
            }
            this.InvokeAsync("unlock", new object[] {
                        in0,
                        in1}, this.unlockOperationCompleted, userState);
        }
        
        private void OnunlockOperationCompleted(object arg) {
            if ((this.unlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1) {
            this.Invoke("deleteItem", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void deleteItemAsync(string in0, int in1) {
            this.deleteItemAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void deleteItemAsync(string in0, int in1, object userState) {
            if ((this.deleteItemOperationCompleted == null)) {
                this.deleteItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteItemOperationCompleted);
            }
            this.InvokeAsync("deleteItem", new object[] {
                        in0,
                        in1}, this.deleteItemOperationCompleted, userState);
        }
        
        private void OndeleteItemOperationCompleted(object arg) {
            if ((this.deleteItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string facetCount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in3) {
            object[] results = this.Invoke("facetCount", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void facetCountAsync(string in0, string[] in1, string in2, string[] in3) {
            this.facetCountAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void facetCountAsync(string in0, string[] in1, string in2, string[] in3, object userState) {
            if ((this.facetCountOperationCompleted == null)) {
                this.facetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfacetCountOperationCompleted);
            }
            this.InvokeAsync("facetCount", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.facetCountOperationCompleted, userState);
        }
        
        private void OnfacetCountOperationCompleted(object arg) {
            if ((this.facetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.facetCountCompleted(this, new facetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            this.Invoke("deleteUser", new object[] {
                        in0});
        }
        
        /// <remarks/>
        public void deleteUserAsync(string in0) {
            this.deleteUserAsync(in0, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string in0, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        in0}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool userExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("userExists", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void userExistsAsync(string in0) {
            this.userExistsAsync(in0, null);
        }
        
        /// <remarks/>
        public void userExistsAsync(string in0, object userState) {
            if ((this.userExistsOperationCompleted == null)) {
                this.userExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserExistsOperationCompleted);
            }
            this.InvokeAsync("userExists", new object[] {
                        in0}, this.userExistsOperationCompleted, userState);
        }
        
        private void OnuserExistsOperationCompleted(object arg) {
            if ((this.userExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userExistsCompleted(this, new userExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string rejectTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, bool in5) {
            object[] results = this.Invoke("rejectTask", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string in0, int in1, string in2, string in3, string in4, bool in5) {
            this.rejectTaskAsync(in0, in1, in2, in3, in4, in5, null);
        }
        
        /// <remarks/>
        public void rejectTaskAsync(string in0, int in1, string in2, string in3, string in4, bool in5, object userState) {
            if ((this.rejectTaskOperationCompleted == null)) {
                this.rejectTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrejectTaskOperationCompleted);
            }
            this.InvokeAsync("rejectTask", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5}, this.rejectTaskOperationCompleted, userState);
        }
        
        private void OnrejectTaskOperationCompleted(object arg) {
            if ((this.rejectTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rejectTaskCompleted(this, new rejectTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("login", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string in0, string in1) {
            this.loginAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void loginAsync(string in0, string in1, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        in0,
                        in1}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addSharedOwner([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            this.Invoke("addSharedOwner", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public void addSharedOwnerAsync(string in0, int in1, string in2) {
            this.addSharedOwnerAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void addSharedOwnerAsync(string in0, int in1, string in2, object userState) {
            if ((this.addSharedOwnerOperationCompleted == null)) {
                this.addSharedOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSharedOwnerOperationCompleted);
            }
            this.InvokeAsync("addSharedOwner", new object[] {
                        in0,
                        in1,
                        in2}, this.addSharedOwnerOperationCompleted, userState);
        }
        
        private void OnaddSharedOwnerOperationCompleted(object arg) {
            if ((this.addSharedOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSharedOwnerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logout() {
            this.Invoke("logout", new object[0]);
        }
        
        /// <remarks/>
        public void logoutAsync() {
            this.logoutAsync(null);
        }
        
        /// <remarks/>
        public void logoutAsync(object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[0], this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool userNameExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("userNameExists", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void userNameExistsAsync(string in0) {
            this.userNameExistsAsync(in0, null);
        }
        
        /// <remarks/>
        public void userNameExistsAsync(string in0, object userState) {
            if ((this.userNameExistsOperationCompleted == null)) {
                this.userNameExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserNameExistsOperationCompleted);
            }
            this.InvokeAsync("userNameExists", new object[] {
                        in0}, this.userNameExistsOperationCompleted, userState);
        }
        
        private void OnuserNameExistsOperationCompleted(object arg) {
            if ((this.userNameExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userNameExistsCompleted(this, new userNameExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string editItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, bool in2) {
            object[] results = this.Invoke("editItem", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editItemAsync(string in0, int in1, bool in2) {
            this.editItemAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void editItemAsync(string in0, int in1, bool in2, object userState) {
            if ((this.editItemOperationCompleted == null)) {
                this.editItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditItemOperationCompleted);
            }
            this.InvokeAsync("editItem", new object[] {
                        in0,
                        in1,
                        in2}, this.editItemOperationCompleted, userState);
        }
        
        private void OneditItemOperationCompleted(object arg) {
            if ((this.editItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editItemCompleted(this, new editItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        public string[] getItemFilenames([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, bool in3) {
            object[] results = this.Invoke("getItemFilenames", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getItemFilenamesAsync(string in0, int in1, string in2, bool in3) {
            this.getItemFilenamesAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void getItemFilenamesAsync(string in0, int in1, string in2, bool in3, object userState) {
            if ((this.getItemFilenamesOperationCompleted == null)) {
                this.getItemFilenamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemFilenamesOperationCompleted);
            }
            this.InvokeAsync("getItemFilenames", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.getItemFilenamesOperationCompleted, userState);
        }
        
        private void OngetItemFilenamesOperationCompleted(object arg) {
            if ((this.getItemFilenamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemFilenamesCompleted(this, new getItemFilenamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getComments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, int in2, int in3, int in4) {
            object[] results = this.Invoke("getComments", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentsAsync(string in0, int in1, int in2, int in3, int in4) {
            this.getCommentsAsync(in0, in1, in2, in3, in4, null);
        }
        
        /// <remarks/>
        public void getCommentsAsync(string in0, int in1, int in2, int in3, int in4, object userState) {
            if ((this.getCommentsOperationCompleted == null)) {
                this.getCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentsOperationCompleted);
            }
            this.InvokeAsync("getComments", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4}, this.getCommentsOperationCompleted, userState);
        }
        
        private void OngetCommentsOperationCompleted(object arg) {
            if ((this.getCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentsCompleted(this, new getCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string searchItemsFast([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, bool in3, int in4, bool in5, int in6, int in7, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in8) {
            object[] results = this.Invoke("searchItemsFast", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchItemsFastAsync(string in0, string[] in1, string in2, bool in3, int in4, bool in5, int in6, int in7, string[] in8) {
            this.searchItemsFastAsync(in0, in1, in2, in3, in4, in5, in6, in7, in8, null);
        }
        
        /// <remarks/>
        public void searchItemsFastAsync(string in0, string[] in1, string in2, bool in3, int in4, bool in5, int in6, int in7, string[] in8, object userState) {
            if ((this.searchItemsFastOperationCompleted == null)) {
                this.searchItemsFastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchItemsFastOperationCompleted);
            }
            this.InvokeAsync("searchItemsFast", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8}, this.searchItemsFastOperationCompleted, userState);
        }
        
        private void OnsearchItemsFastOperationCompleted(object arg) {
            if ((this.searchItemsFastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchItemsFastCompleted(this, new searchItemsFastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void archiveItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1) {
            this.Invoke("archiveItem", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void archiveItemAsync(string in0, int in1) {
            this.archiveItemAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void archiveItemAsync(string in0, int in1, object userState) {
            if ((this.archiveItemOperationCompleted == null)) {
                this.archiveItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnarchiveItemOperationCompleted);
            }
            this.InvokeAsync("archiveItem", new object[] {
                        in0,
                        in1}, this.archiveItemOperationCompleted, userState);
        }
        
        private void OnarchiveItemOperationCompleted(object arg) {
            if ((this.archiveItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.archiveItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        public string[] getTaskFilterNames() {
            object[] results = this.Invoke("getTaskFilterNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskFilterNamesAsync() {
            this.getTaskFilterNamesAsync(null);
        }
        
        /// <remarks/>
        public void getTaskFilterNamesAsync(object userState) {
            if ((this.getTaskFilterNamesOperationCompleted == null)) {
                this.getTaskFilterNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskFilterNamesOperationCompleted);
            }
            this.InvokeAsync("getTaskFilterNames", new object[0], this.getTaskFilterNamesOperationCompleted, userState);
        }
        
        private void OngetTaskFilterNamesOperationCompleted(object arg) {
            if ((this.getTaskFilterNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskFilterNamesCompleted(this, new getTaskFilterNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUserToGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            this.Invoke("addUserToGroup", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void addUserToGroupAsync(string in0, string in1) {
            this.addUserToGroupAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void addUserToGroupAsync(string in0, string in1, object userState) {
            if ((this.addUserToGroupOperationCompleted == null)) {
                this.addUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("addUserToGroup", new object[] {
                        in0,
                        in1}, this.addUserToGroupOperationCompleted, userState);
        }
        
        private void OnaddUserToGroupOperationCompleted(object arg) {
            if ((this.addUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, bool in3) {
            this.Invoke("uploadFile", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
        }
        
        /// <remarks/>
        public void uploadFileAsync(string in0, string in1, string in2, bool in3) {
            this.uploadFileAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void uploadFileAsync(string in0, string in1, string in2, bool in3, object userState) {
            if ((this.uploadFileOperationCompleted == null)) {
                this.uploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFileOperationCompleted);
            }
            this.InvokeAsync("uploadFile", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.uploadFileOperationCompleted, userState);
        }
        
        private void OnuploadFileOperationCompleted(object arg) {
            if ((this.uploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeUserFromAllGroups([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            this.Invoke("removeUserFromAllGroups", new object[] {
                        in0});
        }
        
        /// <remarks/>
        public void removeUserFromAllGroupsAsync(string in0) {
            this.removeUserFromAllGroupsAsync(in0, null);
        }
        
        /// <remarks/>
        public void removeUserFromAllGroupsAsync(string in0, object userState) {
            if ((this.removeUserFromAllGroupsOperationCompleted == null)) {
                this.removeUserFromAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserFromAllGroupsOperationCompleted);
            }
            this.InvokeAsync("removeUserFromAllGroups", new object[] {
                        in0}, this.removeUserFromAllGroupsOperationCompleted, userState);
        }
        
        private void OnremoveUserFromAllGroupsOperationCompleted(object arg) {
            if ((this.removeUserFromAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserFromAllGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string saveItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, bool in1) {
            object[] results = this.Invoke("saveItem", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveItemAsync(string in0, bool in1) {
            this.saveItemAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void saveItemAsync(string in0, bool in1, object userState) {
            if ((this.saveItemOperationCompleted == null)) {
                this.saveItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveItemOperationCompleted);
            }
            this.InvokeAsync("saveItem", new object[] {
                        in0,
                        in1}, this.saveItemOperationCompleted, userState);
        }
        
        private void OnsaveItemOperationCompleted(object arg) {
            if ((this.saveItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveItemCompleted(this, new saveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public int queryCount([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("queryCount", new object[] {
                        in0,
                        in1});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void queryCountAsync(string[] in0, string in1) {
            this.queryCountAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void queryCountAsync(string[] in0, string in1, object userState) {
            if ((this.queryCountOperationCompleted == null)) {
                this.queryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryCountOperationCompleted);
            }
            this.InvokeAsync("queryCount", new object[] {
                        in0,
                        in1}, this.queryCountOperationCompleted, userState);
        }
        
        private void OnqueryCountOperationCompleted(object arg) {
            if ((this.queryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryCountCompleted(this, new queryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("getUser", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync(string in0) {
            this.getUserAsync(in0, null);
        }
        
        /// <remarks/>
        public void getUserAsync(string in0, object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[] {
                        in0}, this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getGroupUuidForName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("getGroupUuidForName", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupUuidForNameAsync(string in0) {
            this.getGroupUuidForNameAsync(in0, null);
        }
        
        /// <remarks/>
        public void getGroupUuidForNameAsync(string in0, object userState) {
            if ((this.getGroupUuidForNameOperationCompleted == null)) {
                this.getGroupUuidForNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupUuidForNameOperationCompleted);
            }
            this.InvokeAsync("getGroupUuidForName", new object[] {
                        in0}, this.getGroupUuidForNameOperationCompleted, userState);
        }
        
        private void OngetGroupUuidForNameOperationCompleted(object arg) {
            if ((this.getGroupUuidForNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupUuidForNameCompleted(this, new getGroupUuidForNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string editUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in5) {
            object[] results = this.Invoke("editUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editUserAsync(string in0, string in1, string in2, string in3, string in4, string in5) {
            this.editUserAsync(in0, in1, in2, in3, in4, in5, null);
        }
        
        /// <remarks/>
        public void editUserAsync(string in0, string in1, string in2, string in3, string in4, string in5, object userState) {
            if ((this.editUserOperationCompleted == null)) {
                this.editUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditUserOperationCompleted);
            }
            this.InvokeAsync("editUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5}, this.editUserOperationCompleted, userState);
        }
        
        private void OneditUserOperationCompleted(object arg) {
            if ((this.editUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editUserCompleted(this, new editUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            this.Invoke("deleteFile", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void deleteFileAsync(string in0, string in1) {
            this.deleteFileAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void deleteFileAsync(string in0, string in1, object userState) {
            if ((this.deleteFileOperationCompleted == null)) {
                this.deleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFileOperationCompleted);
            }
            this.InvokeAsync("deleteFile", new object[] {
                        in0,
                        in1}, this.deleteFileOperationCompleted, userState);
        }
        
        private void OndeleteFileOperationCompleted(object arg) {
            if ((this.deleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool itemExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1) {
            object[] results = this.Invoke("itemExists", new object[] {
                        in0,
                        in1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void itemExistsAsync(string in0, int in1) {
            this.itemExistsAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void itemExistsAsync(string in0, int in1, object userState) {
            if ((this.itemExistsOperationCompleted == null)) {
                this.itemExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnitemExistsOperationCompleted);
            }
            this.InvokeAsync("itemExists", new object[] {
                        in0,
                        in1}, this.itemExistsOperationCompleted, userState);
        }
        
        private void OnitemExistsOperationCompleted(object arg) {
            if ((this.itemExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.itemExistsCompleted(this, new itemExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string addUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in5) {
            object[] results = this.Invoke("addUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addUserAsync(string in0, string in1, string in2, string in3, string in4, string in5) {
            this.addUserAsync(in0, in1, in2, in3, in4, in5, null);
        }
        
        /// <remarks/>
        public void addUserAsync(string in0, string in1, string in2, string in3, string in4, string in5, object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new addUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeSharedOwner([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            this.Invoke("removeSharedOwner", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public void removeSharedOwnerAsync(string in0, int in1, string in2) {
            this.removeSharedOwnerAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void removeSharedOwnerAsync(string in0, int in1, string in2, object userState) {
            if ((this.removeSharedOwnerOperationCompleted == null)) {
                this.removeSharedOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSharedOwnerOperationCompleted);
            }
            this.InvokeAsync("removeSharedOwner", new object[] {
                        in0,
                        in1,
                        in2}, this.removeSharedOwnerOperationCompleted, userState);
        }
        
        private void OnremoveSharedOwnerOperationCompleted(object arg) {
            if ((this.removeSharedOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSharedOwnerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string loginWithToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("loginWithToken", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginWithTokenAsync(string in0) {
            this.loginWithTokenAsync(in0, null);
        }
        
        /// <remarks/>
        public void loginWithTokenAsync(string in0, object userState) {
            if ((this.loginWithTokenOperationCompleted == null)) {
                this.loginWithTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginWithTokenOperationCompleted);
            }
            this.InvokeAsync("loginWithToken", new object[] {
                        in0}, this.loginWithTokenOperationCompleted, userState);
        }
        
        private void OnloginWithTokenOperationCompleted(object arg) {
            if ((this.loginWithTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginWithTokenCompleted(this, new loginWithTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string newItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("newItem", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newItemAsync(string in0) {
            this.newItemAsync(in0, null);
        }
        
        /// <remarks/>
        public void newItemAsync(string in0, object userState) {
            if ((this.newItemOperationCompleted == null)) {
                this.newItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewItemOperationCompleted);
            }
            this.InvokeAsync("newItem", new object[] {
                        in0}, this.newItemOperationCompleted, userState);
        }
        
        private void OnnewItemOperationCompleted(object arg) {
            if ((this.newItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newItemCompleted(this, new newItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool isUserInGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("isUserInGroup", new object[] {
                        in0,
                        in1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isUserInGroupAsync(string in0, string in1) {
            this.isUserInGroupAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void isUserInGroupAsync(string in0, string in1, object userState) {
            if ((this.isUserInGroupOperationCompleted == null)) {
                this.isUserInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisUserInGroupOperationCompleted);
            }
            this.InvokeAsync("isUserInGroup", new object[] {
                        in0,
                        in1}, this.isUserInGroupOperationCompleted, userState);
        }
        
        private void OnisUserInGroupOperationCompleted(object arg) {
            if ((this.isUserInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isUserInGroupCompleted(this, new isUserInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            object[] results = this.Invoke("getItem", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getItemAsync(string in0, int in1, string in2) {
            this.getItemAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getItemAsync(string in0, int in1, string in2, object userState) {
            if ((this.getItemOperationCompleted == null)) {
                this.getItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemOperationCompleted);
            }
            this.InvokeAsync("getItem", new object[] {
                        in0,
                        in1,
                        in2}, this.getItemOperationCompleted, userState);
        }
        
        private void OngetItemOperationCompleted(object arg) {
            if ((this.getItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemCompleted(this, new getItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addComment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, int in3, bool in4) {
            this.Invoke("addComment", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4});
        }
        
        /// <remarks/>
        public void addCommentAsync(string in0, int in1, string in2, int in3, bool in4) {
            this.addCommentAsync(in0, in1, in2, in3, in4, null);
        }
        
        /// <remarks/>
        public void addCommentAsync(string in0, int in1, string in2, int in3, bool in4, object userState) {
            if ((this.addCommentOperationCompleted == null)) {
                this.addCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCommentOperationCompleted);
            }
            this.InvokeAsync("addComment", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4}, this.addCommentOperationCompleted, userState);
        }
        
        private void OnaddCommentOperationCompleted(object arg) {
            if ((this.addCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string acceptTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, bool in3) {
            object[] results = this.Invoke("acceptTask", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void acceptTaskAsync(string in0, int in1, string in2, bool in3) {
            this.acceptTaskAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void acceptTaskAsync(string in0, int in1, string in2, bool in3, object userState) {
            if ((this.acceptTaskOperationCompleted == null)) {
                this.acceptTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnacceptTaskOperationCompleted);
            }
            this.InvokeAsync("acceptTask", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.acceptTaskOperationCompleted, userState);
        }
        
        private void OnacceptTaskOperationCompleted(object arg) {
            if ((this.acceptTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.acceptTaskCompleted(this, new acceptTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        public int[] queryCounts([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] string[] in1) {
            object[] results = this.Invoke("queryCounts", new object[] {
                        in0,
                        in1});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void queryCountsAsync(string[] in0, string[] in1) {
            this.queryCountsAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void queryCountsAsync(string[] in0, string[] in1, object userState) {
            if ((this.queryCountsOperationCompleted == null)) {
                this.queryCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryCountsOperationCompleted);
            }
            this.InvokeAsync("queryCounts", new object[] {
                        in0,
                        in1}, this.queryCountsOperationCompleted, userState);
        }
        
        private void OnqueryCountsOperationCompleted(object arg) {
            if ((this.queryCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryCountsCompleted(this, new queryCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string newVersionItem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, bool in2) {
            object[] results = this.Invoke("newVersionItem", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void newVersionItemAsync(string in0, int in1, bool in2) {
            this.newVersionItemAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void newVersionItemAsync(string in0, int in1, bool in2, object userState) {
            if ((this.newVersionItemOperationCompleted == null)) {
                this.newVersionItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewVersionItemOperationCompleted);
            }
            this.InvokeAsync("newVersionItem", new object[] {
                        in0,
                        in1,
                        in2}, this.newVersionItemOperationCompleted, userState);
        }
        
        private void OnnewVersionItemOperationCompleted(object arg) {
            if ((this.newVersionItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newVersionItemCompleted(this, new newVersionItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void keepAlive() {
            this.Invoke("keepAlive", new object[0]);
        }
        
        /// <remarks/>
        public void keepAliveAsync() {
            this.keepAliveAsync(null);
        }
        
        /// <remarks/>
        public void keepAliveAsync(object userState) {
            if ((this.keepAliveOperationCompleted == null)) {
                this.keepAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnkeepAliveOperationCompleted);
            }
            this.InvokeAsync("keepAlive", new object[0], this.keepAliveOperationCompleted, userState);
        }
        
        private void OnkeepAliveOperationCompleted(object arg) {
            if ((this.keepAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.keepAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getTaskList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, int in2) {
            object[] results = this.Invoke("getTaskList", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskListAsync(string in0, int in1, int in2) {
            this.getTaskListAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getTaskListAsync(string in0, int in1, int in2, object userState) {
            if ((this.getTaskListOperationCompleted == null)) {
                this.getTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskListOperationCompleted);
            }
            this.InvokeAsync("getTaskList", new object[] {
                        in0,
                        in1,
                        in2}, this.getTaskListOperationCompleted, userState);
        }
        
        private void OngetTaskListOperationCompleted(object arg) {
            if ((this.getTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskListCompleted(this, new getTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool groupExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("groupExists", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void groupExistsAsync(string in0) {
            this.groupExistsAsync(in0, null);
        }
        
        /// <remarks/>
        public void groupExistsAsync(string in0, object userState) {
            if ((this.groupExistsOperationCompleted == null)) {
                this.groupExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupExistsOperationCompleted);
            }
            this.InvokeAsync("groupExists", new object[] {
                        in0}, this.groupExistsOperationCompleted, userState);
        }
        
        private void OngroupExistsOperationCompleted(object arg) {
            if ((this.groupExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupExistsCompleted(this, new groupExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getSearchableCollections() {
            object[] results = this.Invoke("getSearchableCollections", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSearchableCollectionsAsync() {
            this.getSearchableCollectionsAsync(null);
        }
        
        /// <remarks/>
        public void getSearchableCollectionsAsync(object userState) {
            if ((this.getSearchableCollectionsOperationCompleted == null)) {
                this.getSearchableCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSearchableCollectionsOperationCompleted);
            }
            this.InvokeAsync("getSearchableCollections", new object[0], this.getSearchableCollectionsOperationCompleted, userState);
        }
        
        private void OngetSearchableCollectionsOperationCompleted(object arg) {
            if ((this.getSearchableCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSearchableCollectionsCompleted(this, new getSearchableCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOwner([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            this.Invoke("setOwner", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public void setOwnerAsync(string in0, int in1, string in2) {
            this.setOwnerAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void setOwnerAsync(string in0, int in1, string in2, object userState) {
            if ((this.setOwnerOperationCompleted == null)) {
                this.setOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOwnerOperationCompleted);
            }
            this.InvokeAsync("setOwner", new object[] {
                        in0,
                        in1,
                        in2}, this.setOwnerOperationCompleted, userState);
        }
        
        private void OnsetOwnerOperationCompleted(object arg) {
            if ((this.setOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOwnerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeUserFromGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            this.Invoke("removeUserFromGroup", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void removeUserFromGroupAsync(string in0, string in1) {
            this.removeUserFromGroupAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void removeUserFromGroupAsync(string in0, string in1, object userState) {
            if ((this.removeUserFromGroupOperationCompleted == null)) {
                this.removeUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("removeUserFromGroup", new object[] {
                        in0,
                        in1}, this.removeUserFromGroupOperationCompleted, userState);
        }
        
        private void OnremoveUserFromGroupOperationCompleted(object arg) {
            if ((this.removeUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUserFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unzipFile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            this.Invoke("unzipFile", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public void unzipFileAsync(string in0, string in1, string in2) {
            this.unzipFileAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void unzipFileAsync(string in0, string in1, string in2, object userState) {
            if ((this.unzipFileOperationCompleted == null)) {
                this.unzipFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunzipFileOperationCompleted);
            }
            this.InvokeAsync("unzipFile", new object[] {
                        in0,
                        in1,
                        in2}, this.unzipFileOperationCompleted, userState);
        }
        
        private void OnunzipFileOperationCompleted(object arg) {
            if ((this.unzipFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unzipFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAllUsersFromGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            this.Invoke("removeAllUsersFromGroup", new object[] {
                        in0});
        }
        
        /// <remarks/>
        public void removeAllUsersFromGroupAsync(string in0) {
            this.removeAllUsersFromGroupAsync(in0, null);
        }
        
        /// <remarks/>
        public void removeAllUsersFromGroupAsync(string in0, object userState) {
            if ((this.removeAllUsersFromGroupOperationCompleted == null)) {
                this.removeAllUsersFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAllUsersFromGroupOperationCompleted);
            }
            this.InvokeAsync("removeAllUsersFromGroup", new object[] {
                        in0}, this.removeAllUsersFromGroupOperationCompleted, userState);
        }
        
        private void OnremoveAllUsersFromGroupOperationCompleted(object arg) {
            if ((this.removeAllUsersFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAllUsersFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getTaskFilterCounts(bool in0) {
            object[] results = this.Invoke("getTaskFilterCounts", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskFilterCountsAsync(bool in0) {
            this.getTaskFilterCountsAsync(in0, null);
        }
        
        /// <remarks/>
        public void getTaskFilterCountsAsync(bool in0, object userState) {
            if ((this.getTaskFilterCountsOperationCompleted == null)) {
                this.getTaskFilterCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskFilterCountsOperationCompleted);
            }
            this.InvokeAsync("getTaskFilterCounts", new object[] {
                        in0}, this.getTaskFilterCountsOperationCompleted, userState);
        }
        
        private void OngetTaskFilterCountsOperationCompleted(object arg) {
            if ((this.getTaskFilterCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskFilterCountsCompleted(this, new getTaskFilterCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.remoting.web.tle.com", ResponseNamespace="http://soap.remoting.web.tle.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelItemEdit([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, int in1) {
            this.Invoke("cancelItemEdit", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public void cancelItemEditAsync(string in0, int in1) {
            this.cancelItemEditAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void cancelItemEditAsync(string in0, int in1, object userState) {
            if ((this.cancelItemEditOperationCompleted == null)) {
                this.cancelItemEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelItemEditOperationCompleted);
            }
            this.InvokeAsync("cancelItemEdit", new object[] {
                        in0,
                        in1}, this.cancelItemEditOperationCompleted, userState);
        }
        
        private void OncancelItemEditOperationCompleted(object arg) {
            if ((this.cancelItemEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelItemEditCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContributableCollectionsCompletedEventHandler(object sender, getContributableCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContributableCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContributableCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCollectionCompletedEventHandler(object sender, getCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCommentCompletedEventHandler(object sender, getCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSchemaCompletedEventHandler(object sender, getSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchItemsCompletedEventHandler(object sender, searchItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void cloneItemCompletedEventHandler(object sender, cloneItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cloneItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cloneItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void unlockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void facetCountCompletedEventHandler(object sender, facetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class facetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal facetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void userExistsCompletedEventHandler(object sender, userExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void rejectTaskCompletedEventHandler(object sender, rejectTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rejectTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rejectTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addSharedOwnerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void userNameExistsCompletedEventHandler(object sender, userNameExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userNameExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userNameExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void editItemCompletedEventHandler(object sender, editItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getItemFilenamesCompletedEventHandler(object sender, getItemFilenamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemFilenamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemFilenamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCommentsCompletedEventHandler(object sender, getCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchItemsFastCompletedEventHandler(object sender, searchItemsFastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchItemsFastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchItemsFastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void archiveItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTaskFilterNamesCompletedEventHandler(object sender, getTaskFilterNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskFilterNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskFilterNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addUserToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void uploadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeUserFromAllGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveItemCompletedEventHandler(object sender, saveItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void queryCountCompletedEventHandler(object sender, queryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getGroupUuidForNameCompletedEventHandler(object sender, getGroupUuidForNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupUuidForNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupUuidForNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void editUserCompletedEventHandler(object sender, editUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void itemExistsCompletedEventHandler(object sender, itemExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class itemExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal itemExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addUserCompletedEventHandler(object sender, addUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeSharedOwnerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void loginWithTokenCompletedEventHandler(object sender, loginWithTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginWithTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginWithTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void newItemCompletedEventHandler(object sender, newItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isUserInGroupCompletedEventHandler(object sender, isUserInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isUserInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isUserInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getItemCompletedEventHandler(object sender, getItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void acceptTaskCompletedEventHandler(object sender, acceptTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class acceptTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal acceptTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void queryCountsCompletedEventHandler(object sender, queryCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void newVersionItemCompletedEventHandler(object sender, newVersionItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newVersionItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newVersionItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void keepAliveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTaskListCompletedEventHandler(object sender, getTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void groupExistsCompletedEventHandler(object sender, groupExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class groupExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal groupExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSearchableCollectionsCompletedEventHandler(object sender, getSearchableCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSearchableCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSearchableCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setOwnerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeUserFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void unzipFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeAllUsersFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTaskFilterCountsCompletedEventHandler(object sender, getTaskFilterCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskFilterCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskFilterCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void cancelItemEditCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591